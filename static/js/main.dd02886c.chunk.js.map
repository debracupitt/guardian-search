{"version":3,"sources":["hoc/Aux/Aux.js","components/Header/Header.js","hoc/Layout/Layout.js","axios-articles.js","components/Results/Article/Article.js","components/SavedDrawer/SavedDrawer.js","components/SavedDrawer/SavedArticle/SavedArticle.js","components/Results/Results.js","containers/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","Header","react_default","a","createElement","className","Layout","Aux","components_Header_Header","classes","Content","this","Component","instance","axios","create","baseURL","article","href","url","title","date","onClick","clicked","SavedDrawer","drawerToggle","savedArticles","savedArticle","Results","state","results","savedResults","reformatDate","dateArray","split","reformattedDateArray","push","join","saveHandler","articleId","articleTitle","articleDate","articleUrl","updatedSaved","concat","Object","toConsumableArray","_this","id","webTitle","webPublicationDate","webUrl","setState","deleteHandler","event","target","parentNode","remove","articles","_this2","sections","formattedSections","map","section","matchingArticles","sectionName","Article_Article","key","SavedArticle_SavedArticle","e","components_SavedDrawer_SavedDrawer","Search","searchInput","error","handleChange","get","value","then","response","sectionsSet","Set","data","forEach","result","add","catch","responseResults","components_Results_Results","type","placeholder","autoFocus","onChange","App","hoc_Layout_Layout","containers_Search_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd02886c.chunk.js","sourcesContent":["const aux = props => props.children;\n\nexport default aux;\n","import React from \"react\";\n\nimport \"./Header.css\";\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <h1>The Guardian Lookup</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport Aux from \"../Aux/Aux\";\nimport classes from \"./Layout.css\";\nimport Header from \"../../components/Header/Header\";\n\nclass Layout extends Component {\n  render() {\n    return (\n      <Aux>\n        <Header />\n        <main className={classes.Content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nexport default Layout;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://react-burger-builder-5e7af.firebaseio.com/\"\n});\n\nexport default instance;\n","import React from \"react\";\n\nimport \"./Article.css\";\n\nconst article = props => (\n  <div className=\"Article\" href={props.url}>\n    <div>\n      <p className=\"title\">{props.title}</p>\n    </div>\n    <div>\n      <p className=\"date\">{props.date}</p>\n      <a className=\"link\" href={props.url}>\n        READ MORE\n      </a>\n      <p onClick={props.clicked} className=\"save\" title=\"Save Article\">\n        SAVE\n      </p>\n    </div>\n  </div>\n);\n\nexport default article;\n","import React, { Component } from \"react\";\n\nimport \"./SavedDrawer.css\";\n\nclass SavedDrawer extends Component {\n  // Saved articles in a show/hide drawer\n  // state = {\n  //   drawerVisibile: false\n  // }\n  //\n  // drawerToggle = () => {\n  //\n  // };\n\n  render() {\n    return (\n      <div>\n        <section\n          className=\"SavedSection drawer-closed\"\n          onClick={this.drawerToggle}\n        >\n          <h2>Your Saved Articles</h2>\n          <div className=\"saved-articles\">{this.props.savedArticles}</div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default SavedDrawer;\n","import React from \"react\";\n\nimport \"./SavedArticle.css\";\n\nconst savedArticle = props => (\n  <div className=\"SavedArticle\" href={props.url}>\n    <div>\n      <p className=\"title\">{props.title}</p>\n    </div>\n    <div>\n      <p className=\"date\">{props.date}</p>\n      <a className=\"savedLink\" href={props.url}>\n        READ MORE\n      </a>\n      <p onClick={props.clicked} className=\"delete\" title=\"Delete Article\">\n        DELETE\n      </p>\n    </div>\n  </div>\n);\n\nexport default savedArticle;\n","import React, { Component } from \"react\";\n\nimport Article from \"./Article/Article\";\nimport \"./Results.css\";\nimport SavedDrawer from \"../SavedDrawer/SavedDrawer\";\nimport SavedArticle from \"../SavedDrawer/SavedArticle/SavedArticle\";\n\nclass Results extends Component {\n  state = {\n    results: [],\n    savedResults: []\n  };\n\n  componentDidMount() {\n    this.setState({ results: this.props.articles });\n  }\n\n  reformatDate = date => {\n    // format date data to DD/MM/YYYY\n    const dateArray = date.split(\"T\")[0].split(\"-\");\n    let reformattedDateArray = [];\n\n    reformattedDateArray.push(dateArray[2]);\n    reformattedDateArray.push(dateArray[1]);\n    reformattedDateArray.push(dateArray[0]);\n\n    const finalDate = reformattedDateArray.join(\"/\");\n    return finalDate;\n  };\n\n  saveHandler = (articleId, articleTitle, articleDate, articleUrl) => {\n    const updatedSaved = [\n      ...this.state.savedResults,\n      {\n        id: articleId,\n        webTitle: articleTitle,\n        webPublicationDate: articleDate,\n        webUrl: articleUrl\n      }\n    ];\n    this.setState({ savedResults: updatedSaved });\n  };\n\n  deleteHandler = event => {\n    // Delete article card\n    event.target.parentNode.parentNode.remove();\n  };\n\n  render() {\n    const sections = [...this.props.sections];\n    let results = this.props.articles;\n\n    let formattedSections = sections.map(section => {\n      // Create list of articles that match the section name\n      let matchingArticles = results.map(a => {\n        if (a.sectionName === section) {\n          return (\n            <Article\n              key={a.id}\n              title={a.webTitle}\n              date={this.reformatDate(a.webPublicationDate)}\n              url={a.webUrl}\n              clicked={() =>\n                this.saveHandler(\n                  a.id,\n                  a.webTitle,\n                  this.reformatDate(a.webPublicationDate),\n                  a.webUrl\n                )\n              }\n            />\n          );\n        } else {\n          return \"\";\n        }\n      });\n\n      // Return JSX section name and articles that match that section\n      return (\n        <div className=\"section\" key={section}>\n          <h3>{section}</h3>\n          <div className=\"sectionArticles\">{matchingArticles}</div>\n        </div>\n      );\n    });\n\n    let savedResults = this.state.savedResults;\n    let savedArticles = savedResults.map(a => {\n      return (\n        <SavedArticle\n          className=\"saved\"\n          key={a.id}\n          title={a.webTitle}\n          date={a.webPublicationDate}\n          url={a.webUrl}\n          clicked={e => this.deleteHandler(e)}\n        />\n      );\n    });\n\n    return (\n      <div className=\"results-container\">\n        <section className=\"Results\">{formattedSections}</section>\n        <SavedDrawer savedArticles={savedArticles} />\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","import React, { Component } from \"react\";\n\nimport \"./Search.css\";\nimport axios from \"../../axios-articles\";\nimport Results from \"../../components/Results/Results\";\nimport Aux from \"../../hoc/Aux/Aux\";\n\nclass Search extends Component {\n  state = {\n    searchInput: \"\",\n    articles: [],\n    sections: [],\n    error: false\n  };\n\n  handleChange = event => {\n    // Make API resuest as the user types\n    axios\n      .get(\n        \"https://content.guardianapis.com/search?q=\" +\n          event.target.value +\n          \"&api-key=27157d59-4928-405b-baff-081c8792db26\"\n      )\n      .then(response => {\n        const sectionsSet = new Set();\n        response.data.response.results.forEach(result =>\n          sectionsSet.add(result.sectionName)\n        );\n        this.setState({\n          articles: response.data.response.results,\n          sections: sectionsSet\n        });\n      })\n      .catch(error => {\n        this.setState({ error: true });\n      });\n    this.setState({ searchInput: event.target.value });\n  };\n\n  render() {\n    // If error, handle, if not render search results\n    let responseResults = this.state.error ? (\n      <h4> Sorry... looks like something has gone wrong</h4>\n    ) : (\n      <Results articles={this.state.articles} sections={this.state.sections} />\n    );\n\n    return (\n      <Aux>\n        <div className=\"search\">\n          <input\n            type=\"search\"\n            placeholder=\"What are you looking for?\"\n            title=\"Search\"\n            autoFocus=\"autofocus\"\n            className=\"searchInput\"\n            onChange={this.handleChange}\n          />\n        </div>\n        {responseResults}\n      </Aux>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport Search from \"./containers/Search/Search\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Search />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}